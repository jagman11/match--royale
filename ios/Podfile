require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'

# Load custom properties from Podfile.properties.json (if it exists)
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

# Set environment variables from Podfile properties
ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

# Set platform version, fallback to 15.1 if not specified
platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'

# CocoaPods installation settings
install! 'cocoapods',
  :deterministic_uuids => false

# Prepare React Native project
prepare_react_native_project!

target 'Iluvclu' do
  # Use Expo modules
  use_expo_modules!

  # Auto-linking configuration
  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    # Use community CLI for config if auto-linking is enabled
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"]
  else
    # Use Expo's auto-linking for config
    config_command = [
      'node',
      '--no-warnings',
      '--eval',
      'require(require.resolve(\'expo-modules-autolinking\', { paths: [require.resolve(\'expo/package.json\')] }))(process.argv.slice(1))',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
  end

  # Generate the configuration based on the command above
  config = use_native_modules!(config_command)

  # Use frameworks based on Podfile properties or environment variables
  if podfile_properties['ios.useFrameworks']
    use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym
  elsif ENV['USE_FRAMEWORKS']
    use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym
  end

  # Use React Native
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'].nil? || podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/..",  # Absolute path to your app
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false'
  )

  # Post-install hook to modify settings after pods are installed
  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true'
    )

    # Ensure resource bundles aren't signed by default in Xcode 14 and later
    installer.target_installation_results.pod_target_installation_results.each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
end
